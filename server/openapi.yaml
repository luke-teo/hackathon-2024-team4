openapi: 3.0.0

info:
  title: Hackathon 2024 team4 API
  version: 1.0.0

components:
  schemas:
    Score:
      title: Score
      description: Summary of user behavior on that day
      properties:
        date:
          type: string
          format: date
        currentScore:
          type: integer
          minimum: 0
          maximum: 100
        mean:
          type: integer
          minimum: 0
          maximum: 100
        standardDeviation:
          type: integer
        zScore:
          type: number
          format: float
      required:
        - date
        - currentScore
        - mean
        - standardDeviation
        - zScore

  responses:
    400Error:
      description: Bad Request error
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
              errorMessage:
                type: string
              data:
                type: object
                nullable: true
            required:
              - errorCode
              - errorMessage
              - data
    500Error:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
              errorMessage:
                type: string
              data:
                type: object
                nullable: true
            required:
              - errorCode
              - errorMessage
              - data

paths:
  '/scores/{userId}':
    get:
      description: Get list of user behavior scores
      operationId: GetScoresByUserID
      security: []
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          description: Start date
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date
          required: true
          schema:
            type: string
            format: date
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  scores:
                    type: array
                    items:
                      $ref: '#/components/schemas/Score'
                required:
                  - userId
                  - scores
        '400':
          $ref: "#/components/responses/400Error"
        '500':
          $ref: "#/components/responses/500Error"